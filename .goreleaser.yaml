# modelines, feel free to remove those if you don't want/use them:
# yaml-language-server: $schema=https://goreleaser.com/static/schema-pro.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
#
# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
version: 2

project_name: example

before:
  hooks:
    - go mod tidy

builds:
  - targets: [go_first_class]
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      # trims path
      - -trimpath
    ldflags:
      # use commit date instead of current date as main.date
      # only needed if you actually use those things in your main package, otherwise can be ignored.
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }}

checksum:
  name_template: "checksums.txt"

snapshot:
  version_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

nfpms:
  - file_name_template: "{{ .ConventionalFileName }}"
    homepage: https://goreleaser.com
    description: Just another example
    maintainer: Carlos Alexandro Becker <carlos@becker.software>
    license: MIT
    vendor: GoReleaser
    bindir: /usr/bin
    section: utils
    formats: [apk, deb, rpm]

release:
  name_template: "v{{ .Version }}"
  footer: |
    * * *

    <a href="https://goreleser.com"><img src="https://raw.githubusercontent.com/goreleaser/artwork/master/opencollective-header.png" with="100%" alt="GoReleaser logo"></a>

    Find example-reals and commented usage of all options in our [website](https://goreleaser.com/intro/).
    Want to help? You can [sponsor](https://goreleaser.com/sponsors/), get a [Pro License](https://goreleaser.com/pro) or [contribute](https://goreleaser.com/contributing).
    Also, feel free to reach out on [Discord](https://discord.gg/RGEBtg8vQ6) and [Twitter](https://twitter.com/goreleaser)!

nightly:
  publish_release: true
  keep_single_release: true
  version_template: "{{ incminor .Version }}-nightly"
  tag_name: nightly

dockers:
  - image_templates:
      - "ghcr.io/goreleaser/example-split-merge-real:v{{ .Version }}-amd64"
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.description=Just an example-real"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/amd64"
    use: buildx
  - image_templates:
      - "ghcr.io/goreleaser/example-split-merge-real:v{{ .Version }}-arm64"
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.description=Just an example-real"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/arm64"
    use: buildx
# - image_templates:
#   - 'ghcr.io/goreleaser/example-split-merge-real:v{{ .Version }}-windows-amd64'
#   build_flag_templates:
#   - "--pull"
#   - "--label=org.opencontainers.image.description=Just an example-real"
#   - "--label=org.opencontainers.image.created={{.Date}}"
#   - "--label=org.opencontainers.image.name={{.ProjectName}}"
#   - "--label=org.opencontainers.image.revision={{.FullCommit}}"
#   - "--label=org.opencontainers.image.version={{.Version}}"
#   - "--label=org.opencontainers.image.source={{.GitURL}}"
#   - "--platform=windows/amd64"
#   goos: windows
#   dockerfile: windows.dockerfile

docker_manifests:
  - name_template: "ghcr.io/goreleaser/example-split-merge-real:v{{ .Version }}"
    image_templates:
      - "ghcr.io/goreleaser/example-split-merge-real:v{{ .Version }}-amd64"
      - "ghcr.io/goreleaser/example-split-merge-real:v{{ .Version }}-arm64"
    # - 'ghcr.io/goreleaser/example-split-merge-real:v{{ .Version }}-windows-amd64'
  - name_template: "{{ if not .IsNightly }}ghcr.io/goreleaser/example-split-merge-real:latest{{ end }}"
    image_templates:
      - "ghcr.io/goreleaser/example-split-merge-real:v{{ .Version }}-amd64"
      - "ghcr.io/goreleaser/example-split-merge-real:v{{ .Version }}-arm64"
    # - 'ghcr.io/goreleaser/example-split-merge-real:v{{ .Version }}-windows-amd64'

# signs the checksum file
# all files (including the sboms) are included in the checksum, so we don't need to sign each one if we don't want to
# https://goreleaser.com/customization/sign
signs:
  - cmd: cosign
    certificate: "${artifact}.pem"
    args:
      - sign-blob
      - "--output-certificate=${certificate}"
      - "--output-signature=${signature}"
      - "${artifact}"
      - "--yes"
    artifacts: checksum
    output: true

# create a source tarball
# https://goreleaser.com/customization/source/
source:
  enabled: true

# creates SBOMs of all archives and the source tarball using syft
# https://goreleaser.com/customization/sbom
sboms:
  - artifacts: archive
  - id: source # Two different sbom configurations need two different IDs
    artifacts: source

# signs our docker image
# https://goreleaser.com/customization/docker_sign
docker_signs:
  - cmd: cosign
    artifacts: images
    output: true
    args:
      - "sign"
      - "${artifact}"
      - "--yes"
